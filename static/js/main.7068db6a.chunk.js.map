{"version":3,"sources":["Header.js","SearchInput.js","EmojiResultRow.js","EmojiResults.js","filterEmoji.js","App.js","index.js"],"names":["Header","className","src","width","height","alt","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiResultsRow","image","data-clipboard-text","title","EmojiResults","clipboard","Clipboard","destroy","emojiList","map","emoji","key","filterEmoji","searchText","maxResults","filter","toLowerCase","includes","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","ReactDOM","render","document","getElementById"],"mappings":"ogrHAGqBA,G,uLAEjB,OACE,4BAAQC,UAAU,oBAChB,yBACEC,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,KALR,eAQE,yBACEH,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,U,GAfsBC,kBCEfC,G,iNAKnBC,aAAe,SAAAC,GACb,EAAKC,MAAMC,WAAWF,I,wEAItB,OACE,yBAAKR,UAAU,0BACb,6BACE,2BAAOW,SAAUC,KAAKL,qB,GAbSF,kB,gBCDpBQ,G,uLAOjB,IAAMZ,EAAG,iBAAaW,KAAKH,MAAMK,OACjC,OACE,yBACEd,UAAU,+CACVe,sBAAqBH,KAAKH,MAAMO,OAEhC,yBAAKZ,IAAKQ,KAAKH,MAAMO,MAAOf,IAAKA,IACjC,0BAAMD,UAAU,SAASY,KAAKH,MAAMO,Y,GAdCX,kBCGxBY,G,kMAMjBL,KAAKM,UAAY,IAAIC,IAAU,wB,6CAI/BP,KAAKM,UAAUE,Y,+BAIf,OACE,yBAAKpB,UAAU,2BACZY,KAAKH,MAAMY,UAAUC,KAAI,SAAAC,GAAK,OAC7B,kBAAC,EAAD,CACEC,IAAKD,EAAMP,MACXF,MAAOS,EAAMT,MACbE,MAAOO,EAAMP,gB,GApBiBX,kB,OCL3B,SAASoB,EAAYC,EAAYC,GAC9C,OAAON,EACJO,QAAO,SAAAL,GACN,QAAIA,EAAMP,MAAMa,cAAcC,SAASJ,EAAWG,kBAKnDE,MAAM,EAAGJ,G,ICJOK,E,YACnB,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KAMRwB,mBAAqB,SAAAzB,GACnB,EAAK0B,SAAS,CACZC,cAAeV,EAAYjB,EAAM4B,OAAOC,UAP1C,EAAKC,MAAQ,CACXH,cAAeV,EAAY,KAHZ,E,sEAcjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaf,WAAYE,KAAKqB,qBAC9B,kBAAC,EAAD,CAAcZ,UAAWT,KAAK0B,MAAMH,qB,GAnBX9B,iB,YCAjCkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7068db6a.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport \"./Header.css\";\n\nexport default class Header extends PureComponent {\n  render() {\n    return (\n      <header className=\"component-header\">\n        <img\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f638.png\"\n          width=\"32\"\n          height=\"32\"\n          alt=\"\"\n        />\n        Emoji Search\n        <img\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f63a.png\"\n          width=\"32\"\n          height=\"32\"\n          alt=\"\"\n        />\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./SearchInput.css\";\n\nexport default class SearchInput extends PureComponent {\n  static propTypes = {\n    textChange: PropTypes.func\n  };\n\n  handleChange = event => {\n    this.props.textChange(event);\n  };\n\n  render() {\n    return (\n      <div className=\"component-search-input\">\n        <div>\n          <input onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EmojiResultRow.css\";\n\nexport default class EmojiResultsRow extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    image: PropTypes.string\n  };\n\n  render() {\n    const src = `images/${this.props.image}`;\n    return (\n      <div\n        className=\"component-emoji-result-row copy-to-clipboard\"\n        data-clipboard-text={this.props.title}\n      >\n        <img alt={this.props.title} src={src} />\n        <span className=\"title\">{this.props.title}</span>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Clipboard from \"clipboard\";\n\nimport EmojiResultRow from \"./EmojiResultRow\";\nimport \"./EmojiResults.css\";\n\nexport default class EmojiResults extends PureComponent {\n  static propTypes = {\n    emojiList: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  render() {\n    return (\n      <div className=\"component-emoji-results\">\n        {this.props.emojiList.map(emoji => (\n          <EmojiResultRow\n            key={emoji.title}\n            image={emoji.image}\n            title={emoji.title}\n          />\n        )\n        )}\n      </div>\n    );\n  }\n}\n","import emojiList from \"./emojiList.json\";\n\nexport default function filterEmoji(searchText, maxResults) {\n  return emojiList\n    .filter(emoji => {\n      if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"./Header\";\nimport SearchInput from \"./SearchInput\";\nimport EmojiResults from \"./EmojiResults\";\nimport filterEmoji from \"./filterEmoji\";\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\")\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResults emojiList={this.state.filteredEmoji} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}